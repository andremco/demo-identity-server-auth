# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- dev

pool:
  vmImage: 'windows-latest'

steps:

- task: UseDotNet@2
  displayName: 'Runtime Net Core 3.0.x'
  inputs:
    version: '3.0.x'
    packageType: runtime

# - task: DotNetCoreCLI@2
#   displayName: 'Start Building Project $(BuildConfiguration)'
#   inputs:
#     command: 'build'
#     arguments: '--configuration $(BuildConfiguration)'
#     projects: '**/*.sln'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish Project $(BuildConfiguration)'
#   inputs:
#     command: 'publish'
#     projects: '**/*.sln'
#     arguments: '--no-build --no-restore /p:Configuration=$(BuildConfiguration) /p:EnvironmentName=Production -o $(System.DefaultWorkingDirectory)\publish'
#     publishWebProjects: true

- task: AzureCLI@2
  displayName: 'Publish Certificate to /publish'
  inputs:
    azureSubscription: 'Visual Studio Enterprise (e945f6ed-8c00-4129-8ecd-263ec98eaf36)'
    scriptType: pscore
    scriptPath: './GetCertificateAz.ps1'
    arguments: './GetCertificateAz.ps1;'
  env:
    ACCOUNTKEY: $(AccountKey)
    ACCOUNTNAME: $(AccountName)
    PATHCERTSAZ: $(PathCertAz)
    SHARENAME: $(ShareName)
    DESTCERT: publish

# - task: PublishBuildArtifacts@1
#   displayName: 'Artifacts $(Build.ArtifactStagingDirectory)'
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
#     artifactName: 'drop' 
#     publishLocation: 'Container'